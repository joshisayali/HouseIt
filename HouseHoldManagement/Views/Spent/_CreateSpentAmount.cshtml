@model HouseHoldManagement.Business.Expense.CreateSpentAmountViewModel

<div id="partialViewData">
    @*@using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-vertical novalidate" }))
        {*@
    <form class="form-vertical">
        <div class="container">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SpentAmountDate, new { @class = "control-label" })
                        @Html.EditorFor(model => model.SpentAmountDate, new { @htmlAttributes = new { @id = "edfSpentAmountDate", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SpentAmountDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SpentAmountItem, new { @class = "control-label" })
                        @Html.EditorFor(model => model.SpentAmountItem, new { @htmlAttributes = new { @id = "edfSpentAmountItem", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SpentAmountItem, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AmountSpent, new { @class = "control-label" })
                        @Html.EditorFor(model => model.AmountSpent, new { @htmlAttributes = new { @id = "edfAmountSpent", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AmountSpent, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>           
            <div class="row">
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PaymentMode, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.PaymentMode.PaymentModeId, new SelectList(ViewBag.PaymentModes, "PaymentModeId", "PaymentModeName"), "--Select--", new { @id = "edfPaymentMode", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ExpenseType, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.ExpenseType.ExpenseTypeId, new SelectList(ViewBag.ExpenseTypes, "ExpenseTypeId", "ExpenseTypeName"), "--Select", new { @id = "edfExpenseType", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ExpenseType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SpentAmountDetails, new { @class = "control-label" })
                        @Html.EditorFor(model => model.SpentAmountDetails, new { @htmlAttributes = new { @id = "edfSpentAmountDetails", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SpentAmountDetails, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12">
                    <button type="submit" class="btn btn-primary" onclick="CreateSpentAmount()">Create</button>
                </div>
            </div>
        </div>
    </form>
    @*}*@
</div>
<script>
    function CreateSpentAmount() {
    
        var modelData = {

            "SpentAmountDate": $('#edfSpentAmountDate').val(),
            "SpentAmountItem": $('#edfSpentAmountItem').val(),
            "AmountSpent": $('#edfAmountSpent').val(),
            "ExpenseType":
                {
                    "ExpenseTypeId": $('#edfExpenseType').val(),
                    "ExpenseTypeName": $('#edfExpenseType option:selected').text()
                },
            "PaymentMode":
                {
                    "PaymentModeId": $('#edfPaymentMode').val(),
                    "PaymentModeName": $('#edfPaymentMode option:selected').text()
                },
            "SpentAmountDetails": $('#edfSpentAmountDetails').val()
        }

        $.ajax({

            type: 'POST',
            url: '/Spent/CreateSpentAmount',
            data: { spentAmountToCreate: modelData },
            datatype: 'json',
            success: function (data) {
                
                if (data.isRedirect) {                    
                    window.location.href = data.redirectUrl;
                }
                else {
                    $('#partialViewData').html(data);
                }
            },
            error: function (error) {
                alert(error);
            }

        });

    }
</script>
